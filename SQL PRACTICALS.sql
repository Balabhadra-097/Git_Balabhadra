CREATE DATABASE STUDENT_SOCIETY;
USE STUDENT_SOCIETY;
CREATE TABLE STUDENT(
ROLL_NO CHAR(6) PRIMARY KEY,
STUDENT_NAME VARCHAR(20),
COURSE VARCHAR(10),
DOB DATE );
CREATE TABLE SOCIETY(
SOC_ID CHAR(6) PRIMARY KEY,
SOC_NAME VARCHAR(20),
MENTOR_NAME VARCHAR(15),
TOTAL_SEATS INT UNSIGNED);
CREATE TABLE ENROLLMENT(
ROLL_NO CHAR(6),
SID CHAR(6),
DATE_OF_ENROLLMENT DATE,
FOREIGN KEY (ROLL_NO) REFERENCES STUDENT(ROLL_NO),
FOREIGN KEY(SID) REFERENCES SOCIETY(SOC_ID));

INSERT INTO STUDENT(ROLL_NO,STUDENT_NAME,COURSE,DOB)
VALUES
('X001','AMIT_PAL','SOFTWARE','2005-07-04'),
('X002','ANKIT_GUPTA','SOFTWARE','2004-03-02'),
('X003','ABHISHEK_PAL','COMPUTER','2005-06-03'),
('X004','ANUJ','BA_PROGRAM','2005-01-01'),
('X005','AMAN','MATHS','2005-07-07'),
('X006','BHUVAN','CHEMISTRY','2004-06-09'),
('X009','DHRUV','MATHS','2006-03-02'),
('Z019','HRITIK','HINDI','2003-02-08'),
('X019','KARTIK','BMS','2004-02-02'),
('X001','SUJIT','BIOLOGY','2005-07-01');

SET SQL_SAFE_UPDATES=0;

INSERT INTO SOCIETY(SOC_ID,SOC_NAME,MENTOR_NAME,TOTAL_SEATS)
VALUES
('1','DANCE','PAL',20),
('2','SANSKRIT','YADAV',10),
('3','DEBATING','GUPTA',20),
('4','PATHSALA','KUMAR',9),
('1','NSS','VERMA',8);

INSERT INTO ENROLLMENT(ROLL_NO,SID,DATE_OF_ENROLLMENT)
VALUES
('X001',1,'2024-07-04'),
('X002',2,'2024-03-02'),
('X003',3,'2024-06-03'),
('X004',3,'2024-01-01'),
('X005',1,'2023-07-07'),
('X006',4,'2022-06-09'),
('X009',5,'2024-03-02'),
('Z019',2,'2021-02-08'),
('X019',3,'2023-02-02'),
('X001',5,'2022-07-01');


#1
SELECT STUDENT_NAME FROM STUDENT WHERE ROLL_NO IN (SELECT ROLL_NO FROM ENROLLMENT);

#2
SELECT SOC_NAME FROM SOCIETY;

#3
SELECT STUDENT_NAME
FROM STUDENT 
WHERE STUDENT_NAME LIKE 'A%';

#4
SELECT STUDENT_NAME
FROM STUDENT 
WHERE COURSE IN ('COMPUTER','CHEMISTRY');

#5
SELECT STUDENT_NAME
FROM STUDENT 
WHERE (ROLL_NO LIKE 'X%9' OR ROLL_NO LIKE 'Z%9');


#6
SET @N=10;
SELECT*FROM SOCIETY
WHERE TOTAL_SEATS>@N;

#7

UPDATE SOCIETY
SET MENTOR_NAME='PANDEY' WHERE MENTOR_NAME='KUMAR';


#8
SELECT SOC_NAME
FROM SOCIETY
WHERE SOC_ID IN (SELECT SID FROM ENROLLMENT GROUP BY SID HAVING COUNT(*)>5);


#9
SELECT STUDENT_NAME
FROM STUDENT
WHERE ROLL_NO = (SELECT ROLL_NO FROM ENROLLMENT WHERE SID = 5 ORDER BY DOB LIMIT 1);

#10
SELECT SOC_NAME
FROM SOCIETY
WHERE SOC_ID = (SELECT SID FROM ENROLLMENT GROUP BY SID ORDER BY COUNT(*) DESC LIMIT 1);


#11
SELECT SOC_NAME
FROM SOCIETY
ORDER BY(SELECT COUNT(*) FROM ENROLLMENT WHERE ENROLLMENT.SID = SOCIETY.SOC_ID)ASC LIMIT 2;


#12
SELECT STUDENT_NAME
FROM STUDENT 
WHERE ROLL_NO NOT IN (SELECT ROLL_NO FROM ENROLLMENT);


#13
SELECT STUDENT_NAME
FROM STUDENT 
WHERE ROLL_NO IN(SELECT ROLL_NO FROM ENROLLMENT GROUP BY ROLL_NO HAVING COUNT(*) >=2);


#14
SELECT SOC_NAME
FROM SOCIETY
WHERE SOC_ID =(SELECT SID FROM ENROLLMENT GROUP BY SID ORDER BY COUNT(*) DESC LIMIT 1);


#15
SELECT DISTINCT 
STUDENT.STUDENT_NAME,
SOCIETY.SOC_NAME
FROM STUDENT 
JOIN ENROLLMENT ON STUDENT.ROLL_NO = ENROLLMENT.ROLL_NO
JOIN SOCIETY ON ENROLLMENT.SID=SOCIETY.SOC_ID;


#16
SELECT DISTINCT 
STUDENT.STUDENT_NAME 
FROM STUDENT 
WHERE ROLL_NO IN (SELECT ROLL_NO FROM ENROLLMENT WHERE SID IN (SELECT SOC_ID FROM SOCIETY WHERE SOC_NAME IN ('DANCE','DEBATING','SANSKRIT')));


#17
SELECT SOC_NAME
FROM SOCIETY
WHERE MENTOR_NAME LIKE '%GUPTA%';



#18
SELECT SOC_NAME
FROM SOCIETY WHERE (SELECT COUNT(*)FROM ENROLLMENT WHERE ENROLLMENT.SID = SOCIETY.SOC_ID) <= 0.1 * TOTAL_SEATS; 

#19
SELECT 
SOC_NAME,TOTAL_SEATS - (SELECT COUNT(*)FROM ENROLLMENT WHERE ENROLLMENT.SID = SOCIETY.SOC_ID) AS VACANT_SEATS
FROM SOCIETY;

SET SQL_SAFE_UPDATES = 0;

#20
UPDATE SOCIETY
SET TOTAL_SEATS = TOTAL_SEATS * 1.1;   

SELECT * FROM SOCIETY;



#21 
ALTER TABLE ENROLLMENT
ADD COLUMN ENROLLMENT_FEES_PAID  VARCHAR(5);  

SELECT * FROM ENROLLMENT;





#22

UPDATE ENROLLMENT SET DATE_OF_ENROLLMENT=
CASE WHEN SID = 101 THEN '2018-01-15'
WHEN SID = 102 THEN '2018-01-02'
ELSE DATE_OF_ENROLLMENT
END
WHERE SID IN (101,102);

SELECT * FROM ENROLLMENT;



#23
CREATE VIEW SOCIETYENROLLMENTVIEW AS
 SELECT SOC_NAME FROM SOCIETY LEFT JOIN ENROLLMENT ON SOCIETY.SOC_ID = ENROLLMENT.SID GROUP BY SOC_ID;




#24 
SELECT STUDENT_NAME
FROM STUDENT
WHERE ROLL_NO IN (SELECT ROLL_NO FROM ENROLLMENT GROUP BY ROLL_NO HAVING COUNT(DISTINCT SID) = (SELECT COUNT(*) FROM SOCIETY));



#25
SELECT SOC_NAME
FROM SOCIETY
WHERE SOC_ID IN ( SELECT SID FROM ENROLLMENT GROUP BY SID HAVING COUNT(*) > 5);



#26
ALTER TABLE STUDENT 
ADD COLUMN MOBILE_NUMBER VARCHAR(10) DEFAULT '9999999999';

SELECT * FROM STUDENT;

#27.Find the total number of student whose age > 20. 
SELECT COUNT(*) AS TOTAL_NUMBER_OF_STUDENT
FROM STUDENT 
WHERE DATE_SUB(CURDATE(),INTERVAL 20 YEAR) > DOB; 
 


#28
SELECT STUDENT_NAME
FROM STUDENT
WHERE YEAR(DOB) = 2001 AND ROLL_NO IN (SELECT ROLL_NO FROM ENROLLMENT); 


#29
SELECT SOC_NAME
FROM SOCIETY
WHERE SOC_NAME LIKE 'S%T'
AND (SELECT COUNT(*) FROM ENROLLMENT WHERE ENROLLMENT.SID = SOCIETY.SOC_ID) >=5; 

#30

SELECT SOC_NAME,MENTOR_NAME,TOTAL_SEATS AS TOTAL_CAPACITY,
(SELECT COUNT(*) FROM ENROLLMENT WHERE ENROLLMENT.SID = SOCIETY.SOC_ID) AS TOTAL_ENROLLED,
TOTAL_SEATS - (SELECT COUNT(*)FROM ENROLLMENT WHERE ENROLLMENT.SID = SOCIETY.SOC_ID) AS UNFILLED_SEATS
FROM SOCIETY;